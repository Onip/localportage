Index: trunk/liferea/src/fl_sources/google_source.h
===================================================================
--- trunk/liferea/src/fl_sources/google_source.h	(revisione 5402)
+++ trunk/liferea/src/fl_sources/google_source.h	(revisione 5404)
@@ -29,7 +29,7 @@
  */
 typedef struct GoogleSource {
 	nodePtr	        root;	/**< the root node in the feed list */
-	gchar		*sid;	/**< session id */
+	gchar           *authHeaderValue; /**< the Google Authorization token */
 	GQueue          *actionQueue;
 	int             loginState; /**< The current login state */
 
@@ -77,15 +77,15 @@
  * Google Reader Login api.
  * @param Email The google account email id.
  * @param Passwd The google account password.
- * @return The return data has a line "SID=xxxx" which should be stored to be
- *         used as a cookie in future requests. 
+ * @return The return data has a line "Auth=xxxx" which will be used as an
+ *         Authorization header in future requests. 
  */ 
 #define GOOGLE_READER_LOGIN_URL "https://www.google.com/accounts/ClientLogin" 
 #define GOOGLE_READER_LOGIN_POST "service=reader&Email=%s&Passwd=%s&source=liferea&continue=http://www.google.com"
 
 /**
  * Acts like a feed, indicating all the posts shared by the Google Reader
- * friends. Does not take any params, but 'sid' cookie needs to be set.
+ * friends. Does not take any params, but the Authorization header needs to be set.
  */
 #define GOOGLE_READER_BROADCAST_FRIENDS_URL "http://www.google.com/reader/atom/user/-/state/com.google/broadcast-friends" 
 
Index: trunk/liferea/src/fl_sources/google_source_edit.c
===================================================================
--- trunk/liferea/src/fl_sources/google_source_edit.c	(revisione 5402)
+++ trunk/liferea/src/fl_sources/google_source_edit.c	(revisione 5404)
@@ -283,7 +283,7 @@
 	request = update_request_new ();
 	request->updateState = update_state_copy (gsource->root->subscription->updateState);
 	request->options = update_options_copy (gsource->root->subscription->updateOptions) ;
-	update_state_set_cookies (request->updateState, gsource->sid);
+	update_request_set_auth_value (request, gsource->authHeaderValue);
 
 	if (action->actionType == EDIT_ACTION_MARK_READ || 
 	    action->actionType == EDIT_ACTION_MARK_UNREAD || 
@@ -320,7 +320,7 @@
 	request->updateState = update_state_copy (gsource->root->subscription->updateState);
 	request->options = update_options_copy (gsource->root->subscription->updateOptions);
 	request->source = g_strdup (GOOGLE_READER_TOKEN_URL);
-	update_state_set_cookies (request->updateState, gsource->sid);
+	update_request_set_auth_value(request, gsource->authHeaderValue);
 
 	update_execute_request (gsource, request, google_source_edit_token_cb, 
 	                        g_strdup(gsource->root->id), 0);
Index: trunk/liferea/src/fl_sources/google_source_feed.c
===================================================================
--- trunk/liferea/src/fl_sources/google_source_feed.c	(revisione 5402)
+++ trunk/liferea/src/fl_sources/google_source_feed.c	(revisione 5404)
@@ -346,7 +346,7 @@
 		g_free (newUrl);
 		g_free (source_escaped);
 	}
-	update_state_set_cookies (request->updateState, gsource->sid);
+	update_request_set_auth_value (request, gsource->authHeaderValue);
 	return TRUE;
 }
 
Index: trunk/liferea/src/fl_sources/google_source_opml.c
===================================================================
--- trunk/liferea/src/fl_sources/google_source_opml.c	(revisione 5402)
+++ trunk/liferea/src/fl_sources/google_source_opml.c	(revisione 5404)
@@ -69,7 +69,6 @@
 		if (!node->subscription || !node->subscription->source) 
 			continue;
 		if (g_str_equal (node->subscription->source, GOOGLE_READER_BROADCAST_FRIENDS_URL)) {
-			update_state_set_cookies (node->subscription->updateState, gsource->sid);
 			return;
 		}
 		iter = g_slist_next (iter);
@@ -86,7 +85,6 @@
 	node_set_parent (node, gsource->root, -1);
 	feedlist_node_imported (node);
 	
-	update_state_set_cookies (node->subscription->updateState, gsource->sid);
 	subscription_update (node->subscription, FEED_REQ_RESET_TITLE | FEED_REQ_PRIORITY_HIGH);
 	subscription_update_favicon (node->subscription);
 }
@@ -147,7 +145,6 @@
 		while (iter) {
 			node = (nodePtr)iter->data;
 			if (g_str_equal (node->subscription->source, url)) {
-				update_state_set_cookies (node->subscription->updateState, gsource->sid);
 				node->subscription->type = &googleSourceFeedSubscriptionType;
 				goto cleanup ;
 			}
@@ -164,7 +161,6 @@
 		node_set_parent (node, gsource->root, -1);
 		feedlist_node_imported (node);
 		
-		update_state_set_cookies (node->subscription->updateState, gsource->sid);
 		/**
 		 * @todo mark the ones as read immediately after this is done
 		 * the feed as retrieved by this has the read and unread
@@ -309,9 +305,9 @@
 	updateRequestPtr request = update_request_new ();
 	request->updateState = update_state_copy (gsource->root->subscription->updateState);
 	request->options = update_options_copy (gsource->root->subscription->updateOptions);
-	update_state_set_cookies (request->updateState, gsource->sid);
 	update_request_set_source (request, GOOGLE_READER_UNREAD_COUNTS_URL);
-	
+	update_request_set_auth_value(request, gsource->authHeaderValue);
+
 	update_execute_request (gsource, request, google_source_quick_update_cb,
 				gsource, 0);
 
@@ -340,7 +336,7 @@
 	
 	update_request_set_source (request, GOOGLE_READER_SUBSCRIPTION_LIST_URL);
 	
-	update_state_set_cookies (request->updateState, gsource->sid);
+	update_request_set_auth_value (request, gsource->authHeaderValue);
 	
 	return TRUE;
 }
Index: trunk/liferea/src/fl_sources/google_source.c
===================================================================
--- trunk/liferea/src/fl_sources/google_source.c	(revisione 5402)
+++ trunk/liferea/src/fl_sources/google_source.c	(revisione 5404)
@@ -66,7 +66,7 @@
 
 	update_job_cancel_by_owner (gsource);
 	
-	g_free (gsource->sid);
+	g_free (gsource->authHeaderValue);
 	g_queue_free (gsource->actionQueue) ;
 	g_hash_table_unref (gsource->lastTimestampMap);
 	g_free (gsource);
@@ -88,21 +88,21 @@
 	gchar		*tmp = NULL;
 	subscriptionPtr subscription = gsource->root->subscription;
 		
-	debug0 (DEBUG_UPDATE, "google login processing...");
+	debug1 (DEBUG_UPDATE, "google login processing... %s", result->data);
 	
-	g_assert (!gsource->sid);
+	g_assert (!gsource->authHeaderValue);
 	
 	if (result->data && result->httpstatus == 200)
-		tmp = strstr (result->data, "SID=");
+		tmp = strstr (result->data, "Auth=");
 		
 	if (tmp) {
 		gchar *ttmp = tmp; 
 		tmp = strchr (tmp, '\n');
 		if (tmp)
 			*tmp = '\0';
-		gsource->sid = g_strdup (ttmp);
+		gsource->authHeaderValue = g_strdup_printf ("GoogleLogin auth=%s", ttmp + 5);
 
-		debug1 (DEBUG_UPDATE, "google reader SID found: %s", gsource->sid);
+		debug1 (DEBUG_UPDATE, "google reader Auth token found: %s", gsource->authHeaderValue);
 		/* now that we are authenticated trigger updating to start data retrieval */
 		gsource->loginState = GOOGLE_SOURCE_STATE_ACTIVE;
 		if (!(flags & GOOGLE_SOURCE_UPDATE_ONLY_LOGIN))
@@ -112,7 +112,7 @@
 		google_source_edit_process (gsource);
 
 	} else {
-		debug0 (DEBUG_UPDATE, "google reader login failed! no SID found in result!");
+		debug0 (DEBUG_UPDATE, "google reader login failed! no Auth token found in result!");
 		subscription->node->available = FALSE;
 
 		g_free (subscription->updateError);
@@ -125,7 +125,7 @@
 
 /**
  * Perform a login to Google Reader, if the login completes the 
- * GoogleSource will have a valid sid and will have loginStatus to 
+ * GoogleSource will have a valid Auth token and will have loginStatus to 
  * GOOGLE_SOURCE_LOGIN_ACTIVE.
  */
 void
Index: trunk/liferea/src/update.c
===================================================================
--- trunk/liferea/src/update.c	(revisione 5402)
+++ trunk/liferea/src/update.c	(revisione 5404)
@@ -135,6 +135,13 @@
 	request->source = g_strdup(source) ;
 }
 
+void
+update_request_set_auth_value(updateRequestPtr request, const gchar* authValue)
+{
+	g_free(request->authValue);
+	request->authValue = g_strdup(authValue);
+}
+
 updateResultPtr
 update_result_new (void)
 {
Index: trunk/liferea/src/net.c
===================================================================
--- trunk/liferea/src/net.c	(revisione 5402)
+++ trunk/liferea/src/net.c	(revisione 5404)
@@ -146,7 +146,8 @@
 	}
 
 	/* Set the authentication */
-	if (job->request->options &&
+	if (!job->request->authValue &&
+	    job->request->options &&
 	    job->request->options->username &&
 	    job->request->options->password) {
 		SoupURI *uri = soup_message_get_uri (msg);
@@ -155,6 +156,11 @@
 		soup_uri_set_password (uri, job->request->options->password);
 	}
 
+	if (job->request->authValue) {
+		soup_message_headers_append (msg->request_headers, "Authorization",
+					     job->request->authValue);
+	}
+
 	/* Add requested cookies */
 	if (job->request->updateState && job->request->updateState->cookies) {
 		soup_message_headers_append (msg->request_headers, "Cookie",
Index: trunk/liferea/src/update.h
===================================================================
--- trunk/liferea/src/update.h	(revisione 5402)
+++ trunk/liferea/src/update.h	(revisione 5404)
@@ -89,6 +89,7 @@
 					     filename. Eventually, everything should be a
 					     URL. Use file:// and exec:// */
 	gchar           *postdata;      /**< HTTP POST request data (NULL for non-POST requests) */
+	gchar           *authValue;     /**< Custom value for Authorization: header */
 	updateOptionsPtr options;	/**< Update options for the request */
 	gchar		*filtercmd;	/**< Command will filter output of URL */
 	updateStatePtr	updateState;	/**< Update state of the requested object (etags, last modified...) */
@@ -197,6 +198,14 @@
 void update_request_set_source(updateRequestPtr request, const gchar* source);
 
 /**
+ * Sets a custom authorization header value.
+ *
+ * @param request        the update request
+ * @param authValue      the authorization header value
+ */
+void update_request_set_auth_value(updateRequestPtr request, const gchar* authValue);
+
+/**
  * Creates a new update result for the given update request.
  *
  * @param request	the update request
